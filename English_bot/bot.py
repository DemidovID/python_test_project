import json
import random
import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from config import TOKEN

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
with open("/Users/igordemidov/Desktop/DemidovIgorBot/English_bot/data.json", "r", encoding="utf-8") as file:
    data = json.load(file)

# –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–µ–æ—Ä–∏–∏
user_theory_progress = {}

menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìñ –°–ª–æ–≤–∞"), KeyboardButton(text="üó£ –†–∞–∑–≥–æ–≤–æ—Ä")],
        [KeyboardButton(text="üìö –¢–µ–æ—Ä–∏—è TIHL")]
    ],
    resize_keyboard=True
)

@dp.message(Command("start"))
async def start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ. –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –∏–∑—É—á–∞—Ç—å!",
        reply_markup=menu_keyboard
    )

@dp.message(lambda msg: msg.text == "üìñ –°–ª–æ–≤–∞")
async def send_word(message: Message):
    word = random.choice(data["words"])
    response = f"**–°–ª–æ–≤–æ:** {word['word']}\n**–ü–µ—Ä–µ–≤–æ–¥:** {word['translation']}\n**–ü—Ä–∏–º–µ—Ä:** {word['example']}"
    await message.answer(response, parse_mode="Markdown")

@dp.message(lambda msg: msg.text == "üó£ –†–∞–∑–≥–æ–≤–æ—Ä")
async def send_question(message: Message):
    question = random.choice(data["questions"])
    await message.answer(f"üí¨ {question}")

@dp.message(lambda msg: msg.text == "üìö –¢–µ–æ—Ä–∏—è TIHL")
async def send_theory(message: Message):
    user_id = message.from_user.id
    if user_id not in user_theory_progress:
        user_theory_progress[user_id] = 0
    
    index = user_theory_progress[user_id]
    if index < len(data["theory"]):
        await message.answer(data["theory"][index])
        user_theory_progress[user_id] += 1
    else:
        await message.answer("–¢—ã —É–∂–µ –∏–∑—É—á–∏–ª –≤—Å—é —Ç–µ–æ—Ä–∏—é!")

@dp.message()
async def handle_other_messages(message: Message):
    await message.answer("–Ø –ø–æ–∫–∞ –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã –∏–∑ –º–µ–Ω—é üôÇ")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
